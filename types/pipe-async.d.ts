export declare function asyncPipe<T>(value: T): Promise<T>;
export declare function asyncPipe<A, B>(value: A, fn1: (input: A) => B | Promise<B>): Promise<B>;
export declare function asyncPipe<A, B, C>(value: A, fn1: (input: A) => B | Promise<B>, fn2: (input: B) => C | Promise<C>): Promise<C>;
export declare function asyncPipe<A, B, C, D>(value: A, fn1: (input: A) => B | Promise<B>, fn2: (input: B) => C | Promise<C>, fn3: (input: C) => D | Promise<D>): Promise<D>;
export declare function asyncPipe<A, B, C, D, E>(value: A, fn1: (input: A) => B | Promise<B>, fn2: (input: B) => C | Promise<C>, fn3: (input: C) => D | Promise<D>, fn4: (input: D) => E | Promise<E>): Promise<E>;
export declare function asyncPipe<A, B, C, D, E, F>(value: A, fn1: (input: A) => B | Promise<B>, fn2: (input: B) => C | Promise<C>, fn3: (input: C) => D | Promise<D>, fn4: (input: D) => E | Promise<E>, fn5: (input: E) => F | Promise<F>): Promise<F>;
export declare function asyncPipe<A, B, C, D, E, F, G>(value: A, fn1: (input: A) => B | Promise<B>, fn2: (input: B) => C | Promise<C>, fn3: (input: C) => D | Promise<D>, fn4: (input: D) => E | Promise<E>, fn5: (input: E) => F | Promise<F>, fn6: (input: F) => G | Promise<G>): Promise<G>;
export declare function asyncPipe<A, B, C, D, E, F, G, H>(value: A, fn1: (input: A) => B | Promise<B>, fn2: (input: B) => C | Promise<C>, fn3: (input: C) => D | Promise<D>, fn4: (input: D) => E | Promise<E>, fn5: (input: E) => F | Promise<F>, fn6: (input: F) => G | Promise<G>, fn7: (input: G) => H | Promise<H>): Promise<H>;
export declare function asyncPipe<A, B, C, D, E, F, G, H, I>(value: A, fn1: (input: A) => B | Promise<B>, fn2: (input: B) => C | Promise<C>, fn3: (input: C) => D | Promise<D>, fn4: (input: D) => E | Promise<E>, fn5: (input: E) => F | Promise<F>, fn6: (input: F) => G | Promise<G>, fn7: (input: G) => H | Promise<H>, fn8: (input: H) => I | Promise<I>): Promise<I>;
export declare function asyncPipe<A, B, C, D, E, F, G, H, I, J>(value: A, fn1: (input: A) => B | Promise<B>, fn2: (input: B) => C | Promise<C>, fn3: (input: C) => D | Promise<D>, fn4: (input: D) => E | Promise<E>, fn5: (input: E) => F | Promise<F>, fn6: (input: F) => G | Promise<G>, fn7: (input: G) => H | Promise<H>, fn8: (input: H) => I | Promise<I>, fn9: (input: I) => J | Promise<J>): Promise<J>;
export declare function asyncPipe<A, B, C, D, E, F, G, H, I, J, K>(value: A, fn1: (input: A) => B | Promise<B>, fn2: (input: B) => C | Promise<C>, fn3: (input: C) => D | Promise<D>, fn4: (input: D) => E | Promise<E>, fn5: (input: E) => F | Promise<F>, fn6: (input: F) => G | Promise<G>, fn7: (input: G) => H | Promise<H>, fn8: (input: H) => I | Promise<I>, fn9: (input: I) => J | Promise<J>, fn10: (input: J) => K | Promise<K>): Promise<K>;
//# sourceMappingURL=pipe-async.d.ts.map